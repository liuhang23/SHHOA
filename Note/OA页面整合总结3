一.使用frameset方式进行页面整合
  1.使用homeAction作为主目录 index
  	将页面分为(上 中（左 右）下) bottom , left ,right ,top
  2.编写HomeAction用于页面跳转
  	@Controller
	@Scope("prototype")
    public class HomeAction extends ActionSupport{
    	// 主页面
		public String index() throws Exception {
			return "index";
		}

		// 下页面
		public String bottom() throws Exception {
			return "bottom";
		}
	
		// 上页面
		public String top() throws Exception {
			return "top";
		}
	
		// 左页面
		public String left() throws Exception {
			return "left";
		}
	
		// 右页面
		public String right() throws Exception {
			return "right";
		}
    }
    
   3.在struts.xml文件中配置homeAction
   	<!-- 4.首页 -->
	<action name="home_*" class="homeAction" method="{1}">
	     <result name="{1}">/WEB-INF/jsp/homeAction/{1}.jsp</result>
	</action>
	
	4.优化默认进入的index页面
		一个功能多个步骤：  转发   (request.getRequestDispatcher().forward(request,response);)
		两个不同的功能：   重定向 （response.sendRedirect()）
	<%@ page language="java" import="java.util.*" pageEncoding="UTF-8"%>
	<% response.sendRedirect(request.getContextPath()+"/home_index.action"); %>
	
二.	左侧菜单 （根据权限显示）显示有权限的链接   --->右侧页面中链接是根据权限显示的
	1.显示左侧所有信息
		1.1 将静态页面数据贴入left.jsp(通过循环迭代的方式将可使用页面显示)
	    1.2 将不变的数据缓存，将缓存数据放在（最大作用域中，整个页面共享数据）Application(方便获取与操作)️
	 作用域 ： application ,session,request,page
	    	在程序启动就将数据查询出并放入application中
		  使用
		  //容器启动就加载执行   （会产生懒加载异常）
			public class InitListener implements ServletContextListener {
					// 初始化数据
					@Override
					public void contextInitialized(ServletContextEvent sce) {
						//获取容器与相关的Service对象   从容器对象中取数据，使用Spring创建的容器对象
						//WebApplicationContextUtils.getWebApplicationContext(sce.getServletContext()) 可以获取Spring创建的容器对象
						//保证使用容器中同一个对象，按照指定key去获取 （与Struts2使用同一个）
						ApplicationContext ac = WebApplicationContextUtils.getWebApplicationContext(sce.getServletContext());
						PrivilegeService privilegeService = (PrivilegeService)ac.getBean("privilegeServiceImpl");
				
						// 准备数据 topPrivilegeList
						List<Privilege> topPrivilegeList = privilegeService.findTopList();
						sce.getServletContext().setAttribute("topPrivilegeList",topPrivilegeList);
						//产生懒加载异常，主要是未加载相关联的对象信息，session已经关闭。  可以关闭懒加载特性 相关联对象 laze="false"
						System.out.println("-------->已准备数据<-------------");
					}

					// 销毁
					@Override
					public void contextDestroyed(ServletContextEvent arg0) {
				
					}
		 }
		  
		  在web.xml中配置拦截器
		    <!-- 用于做初始化工作的监听器，一定要配置到Spring的ContextLoaderListener之后，因为要用到Spring的容器对象 -->
			<listener>	
				<listener-class>com.smartlab.oa.util.InitListener</listener-class>
		    </listener>
		    
		1.3 树状结构显示 （点击菜单可以实现隐藏和显示）
			function menuClick(menu) {
				$(menu).next().toggle(); /*next() 找到当前(div)紧跟的同胞元素ul(二级菜单) */
			}
	    1.4 菜单图片路径，将图片名称换成对应名称id    ../${id} (图片路径)
	  
	2.显示有权限的菜单项
	     ognl表达式可以调用对象，方法 
	     <s:if test="#session.user.hashPrivilegeByName(name)"></s:if>
	     二级菜单页面路径 <a target="right" href="${pageContext.request.contextPath}${url}.action"> ${name}</a>
				
	

	

	
	
   
   